if(is.na(x)){
x<-"0"
}
print(x)
newdata[i,5]<-substrRight(x, 5)
}
myvars <- c("n_killed", "n_injured", "participant_age", "state")
newdata <- mydata[myvars]
newdata[is.na(newdata)] <- 0
newdata$n_participant<-NA
View(newdata)
View(newdata)
View(newdata)
#On garde seulement les colonne qui nous interesse
myvars <- c("n_killed", "n_injured", "participant_age", "state")
newdata <- mydata[myvars]
newdata[is.na(newdata)] <- 0
newdata$n_participant<-NA
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x)-n+1)
}
for(i in 1:nrow(newdata)){
x <- newdata[i,3]
toString(x)
if(is.na(x)){
x<-"0"
}
print(x)
newdata[i,5]<-substrRight(x, 5)
}
x="fbhgsf,ehej,"
n<-substrRight(x, 5)
x="abcdefghijk,"
n<-substrRight(x, 5)
x="ab"
n<-substrRight(x, 5)
x="ab"
n<-substrRight(x, 5)
for(i in 1:10(newdata)){
x <- newdata[i,3]
toString(x)
if(is.na(x)){
x<-"0"
}
newdata[i,5]<-substrRight(x, 5)
}
x <- newdata[500,3]
x <- newdata[3,3]
x <- newdata[3,3]
x <- newdata[3,3]
x <- newdata[3,3]
x <- newdata[3,3]
x <- 0
x <- newdata[3,3]
x <- 0
x <- newdata[3,3]
x <- 0
x <- newdata[3,3]
x <- 0
x <- newdata[3,3]
x <- newdata[3,"n_participant"]
for(i in 1:nrow(newdata)){
x <- newdata[i,"n_participant"]
toString(x)
if(is.na(x)){
x<-"0"
}
newdata[i,5]<-substrRight(x, 5)
}
# Gun Violence Data - BERANGER - ARNAUD - CHIESA
#                                                                 ~~~COLLECTE~~~
#Lecture du fichier
mydata = read.csv(file = "C:/Users/hugob/Desktop/GunViolence/gun-violence-data_01-2013_03-2018.csv", header=TRUE,sep=",", fill=TRUE)
#head(mydata)
#On garde seulement les colonne qui nous interesse
myvars <- c("n_killed", "n_injured", "participant_age", "state")
newdata <- mydata[myvars]
newdata[is.na(newdata)] <- 0
newdata$n_participant<-NA
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x)-n+1)
}
for(i in 1:nrow(newdata)){
x <- newdata[i,"n_participant"]
newdata[i,5]<-substrRight(x, 5)
}
# Gun Violence Data - BERANGER - ARNAUD - CHIESA
#                                                                 ~~~COLLECTE~~~
#Lecture du fichier
mydata = read.csv(file = "C:/Users/hugob/Desktop/GunViolence/gun-violence-data_01-2013_03-2018.csv", header=TRUE,sep=",", fill=TRUE)
#head(mydata)
#On garde seulement les colonne qui nous interesse
myvars <- c("n_killed", "n_injured", "participant_age", "state")
newdata <- mydata[myvars]
newdata[is.na(newdata)] <- 0
newdata$n_participant<-NA
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x)-n+1)
}
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]
newdata[i,"n_participant"]<-substrRight(x, 5)
}
# Gun Violence Data - BERANGER - ARNAUD - CHIESA
#                                                                 ~~~COLLECTE~~~
#Lecture du fichier
mydata = read.csv(file = "C:/Users/hugob/Desktop/GunViolence/gun-violence-data_01-2013_03-2018.csv", header=TRUE,sep=",", fill=TRUE)
#head(mydata)
#On garde seulement les colonne qui nous interesse
myvars <- c("n_killed", "n_injured", "participant_age", "state")
newdata <- mydata[myvars]
newdata[is.na(newdata)] <- 0
newdata$n_participant<-NA
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x)-n+1)
}
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]
newdata[i,"n_participant"]<-substrRight(x, 5)
}
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]
newdata[i,"n_participant"]<-substrRight(x, 5)
}
View(newdata)
# Gun Violence Data - BERANGER - ARNAUD - CHIESA
#                                                                 ~~~COLLECTE~~~
#Lecture du fichier
mydata = read.csv(file = "C:/Users/hugob/Desktop/GunViolence/gun-violence-data_01-2013_03-2018.csv", header=TRUE,sep=",", fill=TRUE,na.strings=c("","NA"))
#head(mydata)
#On garde seulement les colonne qui nous interesse
myvars <- c("n_killed", "n_injured", "participant_age", "state")
newdata <- mydata[myvars]
newdata[is.na(newdata)] <- 0
newdata$n_participant<-NA
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x)-n+1)
}
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]
newdata[i,"n_participant"]<-substrRight(x, 5)
}
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]
if(is.na(x))
x="0"
newdata[i,"n_participant"]<-substrRight(x, 5)
}
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]
newdata[i,"n_participant"]<-substrRight(x, 5)
}
z = newdata[3,"participant_age"]
z = newdata[3,"participant_age"]
z = newdata[3,3]
z = newdata[3,4]
z = newdata[3,1]
z = newdata[3:3,1]
z = newdata[3:3,1]
z = newdata[3:3,3:3]
z = newdata$participant_age[3]
z=0
z = newdata$participant_age[3]
z=0
z = newdata$participant_age[3]
z=0
z = newdata$participant_age[3]
z=0
z = newdata$participant_age[2]
z=0
z = newdata$participant_age[2]
#On garde seulement les colonne qui nous interesse
myvars <- c("n_killed", "n_injured", "participant_age", "state")
newdata <- mydata[myvars]
newdata$n_participant<-NA
z=0
z = newdata$participant_age[2]
z = newdata[3,2:3]
z = newdata[3,2:3]
z = newdata[3,2:3]
z = newdata[3,1]
z = newdata[3,2]
z = newdata[3,5]
z = newdata[3,3]
z = newdata[3,2]
smoke <- matrix(c(51,43,22,92,28,21,68,22,9),ncol=3,byrow=TRUE)
a = smoke[2,2]
View(smoke)
z = newdata[3,2]
z = newdata[3,3]
View(newdata)
View(newdata)
View(newdata)
View(mydata)
# Gun Violence Data - BERANGER - ARNAUD - CHIESA
#                                                                 ~~~COLLECTE~~~
#Lecture du fichier
mydata = read.csv(file = "C:/Users/hugob/Desktop/GunViolence/gun-violence-data_01-2013_03-2018.csv", header=TRUE,sep=",", fill=TRUE,na.strings=c("","NA"))
#head(mydata)
#On garde seulement les colonne qui nous interesse
myvars <- c("n_killed", "n_injured", "participant_age", "state")
newdata <- mydata[myvars]
newdata$n_participant<-NA
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x)-n+1)
}
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]
newdata[i,"n_participant"]<-substrRight(x, 5)
}
# Gun Violence Data - BERANGER - ARNAUD - CHIESA
#                                                                 ~~~COLLECTE~~~
#Lecture du fichier
mydata = read.csv(file = "C:/Users/hugob/Desktop/GunViolence/gun-violence-data_01-2013_03-2018.csv", header=TRUE,sep=",", fill=TRUE,na.strings=c("","NA"), stringsAsFactors = FALSE)
#head(mydata)
#On garde seulement les colonne qui nous interesse
myvars <- c("n_killed", "n_injured", "participant_age", "state")
newdata <- mydata[myvars]
newdata$n_participant<-NA
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x)-n+1)
}
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]
newdata[i,"n_participant"]<-substrRight(x, 5)
}
# Gun Violence Data - BERANGER - ARNAUD - CHIESA
#                                                                 ~~~COLLECTE~~~
#Lecture du fichier
mydata = read.csv(file = "C:/Users/hugob/Desktop/GunViolence/gun-violence-data_01-2013_03-2018.csv", header=TRUE,sep=",", fill=TRUE,na.strings=c("","NA"), stringsAsFactors = FALSE)
#head(mydata)
#On garde seulement les colonne qui nous interesse
myvars <- c("n_killed", "n_injured", "participant_age", "state")
newdata <- mydata[myvars]
newdata$n_participant<-NA
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x)-n+1)
}
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]
newdata[i,"n_participant"]<-substrRight(x, 5)
}
# Gun Violence Data - BERANGER - ARNAUD - CHIESA
#                                                                 ~~~COLLECTE~~~
#Lecture du fichier
mydata = read.csv(file = "C:/Users/hugob/Desktop/GunViolence/gun-violence-data_01-2013_03-2018.csv", header=TRUE,sep=",", fill=TRUE,na.strings=c("","NA"), stringsAsFactors = FALSE)
#head(mydata)
#On garde seulement les colonne qui nous interesse
myvars <- c("n_killed", "n_injured", "participant_age", "state")
newdata <- mydata[myvars]
newdata$n_participant<-NA
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x)-n+1)
}
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x)-n+1)
}
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]
newdata[i,"n_participant"]<-substrRight(x, 5)
}
View(newdata)
View(newdata)
View(newdata)
View(newdata)
View(newdata)
View(newdata)
View(newdata)
View(newdata)
View(newdata)
View(newdata)
View(newdata)
View(mydata)
View(mydata)
View(mydata)
View(mydata)
View(newdata)
View(newdata)
View(newdata)
View(mydata)
View(mydata)
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]
#newdata[i,"n_participant"]<-substrRight(x, 5)
newdata[i,"n_participant"]<- str_count(x, "::")
}
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]
#newdata[i,"n_participant"]<-substrRight(x, 5)
newdata[i,"n_participant"]<- lengths(regmatches(x, gregexpr("::", x)))
}
# Gun Violence Data - BERANGER - ARNAUD - CHIESA
#                                                                 ~~~COLLECTE~~~
#Lecture du fichier
mydata = read.csv(file = "C:/Users/hugob/Desktop/GunViolence/gun-violence-data_01-2013_03-2018.csv", header=TRUE,sep=",", fill=TRUE,na.strings=c("","NA"), stringsAsFactors = FALSE)
#head(mydata)
#On garde seulement les colonne qui nous interesse
myvars <- c("n_killed", "n_injured", "participant_age", "state")
newdata <- mydata[myvars]
newdata$n_participant<-NA
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x)-n+1)
}
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]
#newdata[i,"n_participant"]<-substrRight(x, 5)
newdata[i,"n_participant"]<- lengths(regmatches(x, gregexpr("::", x)))
}
# Gun Violence Data - BERANGER - ARNAUD - CHIESA
#                                                                 ~~~COLLECTE~~~
#Lecture du fichier
mydata = read.csv(file = "C:/Users/hugob/Desktop/GunViolence/gun-violence-data_01-2013_03-2018.csv", header=TRUE,sep=",", fill=TRUE,na.strings=c("","NA"), stringsAsFactors = FALSE)
#head(mydata)
#On garde seulement les colonne qui nous interesse
myvars <- c("n_killed", "n_injured", "participant_age", "state")
newdata <- mydata[myvars]
newdata$n_participant<-NA
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x)-n+1)
}
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]
#newdata[i,"n_participant"]<-substrRight(x, 5)
newdata[i,"n_participant"]<- lengths(regmatches(x, gregexpr("::", x)))
}
View(newdata)
pattern = "\d::"
data = "0::51||1::40||2::9||3::5||4::2||5::15"
m <- regexpr(pattern, data)
y = regmatches(data,m)
pattern = "\\d::"
data = "0::51||1::40||2::9||3::5||4::2||5::15"
m <- regexpr(pattern, data)
y = regmatches(data,m)
hugo <- gsub("\\d::","",data)
hugo <- gsub("\\x7c\\x7c","",hugo)
hugo <- gsub("\\d::","",data)
hugo <- gsub("\\x7c\\x7c",";",hugo)
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]
newdata[i,"n_participant"]<- lengths(regmatches(x, gregexpr("::", x)))
newdata[i,"participant_age"]<-gsub("\\d::","",newdata[i,"participant_age"])
}
# Gun Violence Data - BERANGER - ARNAUD - CHIESA
#                                                                 ~~~COLLECTE~~~
#Lecture du fichier
mydata = read.csv(
file = "C:/Users/hugob/Desktop/GunViolence/gun-violence-data_01-2013_03-2018.csv",
header = TRUE,
sep = ",",
fill = TRUE,
na.strings = c("", "NA"),                                                                      #remplace les vides par NA
stringsAsFactors = FALSE                                                                       #ne lit pas en tant de vecteurs les strings
)
#Selection des colonnes voulues
myvars <- c("n_killed", "n_injured", "participant_age", "state")
newdata <- mydata[myvars]
for(i in 1:nrow(newdata)){
x <- newdata[i,"participant_age"]                                                 #prend l'age des participant
newdata[i,"n_participant"]<- lengths(regmatches(x, gregexpr("::", x)))            #compte les participants en comptant le nombre de '::'
is.na(newdata[i,"n_participant"]) <- !newdata[i,"n_participant"]                  #remplace les '0' par de 'NA'
newdata[i,"participant_age"]<-gsub("\\d::","",newdata[i,"participant_age"])       #supprime les 'chiffre::' de "participant_age"
newdata[i,"participant_age"]<-gsub("\\x7c\\x7c",";",newdata[i,"participant_age"]) #supprime les '||' de "participant_age" et les remplace par des ';'
}
View(mydata)
View(mydata)
View(newdata)
#---------------------------------#
# DOWNLOADING DATA FROM WIKIPEDIA #
#---------------------------------#
# The read_html() function load the web page html content in an object named le
le = read_html("https://en.wikipedia.org/w/index.php?title=List_of_U.S._states_and_territories_by_life_expectancy&oldid=928537169")
# Filter html content inobject le to keep only the life expectancy table
le = le %>% html_nodes("table") %>% .[[2]] %>% html_table(fill=T)
View(le)
#--------------------#
# DATA PREPROCESSING #
#--------------------#
# Column selection
le = le[c(1,2,6,7)]
View(le)
# Renaming columns ('le' : life expectancy)
names(le)[c(3,4)] = c("le_caucasian", "le_african")
View(le)
# Converting to numerical format (encodes missing values with NAs)
le$le_caucasian <- as.numeric(le$le_caucasian)
le$le_african <- as.numeric(le$le_african)
View(le)
# Calculating Differences Between Caucasian-American and African-American Life Expectancy
le$le_diff = le$le_caucasian - le$le_african
View(le)
# Loading USA states data
states = map_data("state")
# Creating a new variable 'region' with state names
le$region = tolower(le$State)
View(le)
# Merging our data with the USA 'states' data from 'maps' package
states = merge(states, le, by="region", all.x=T)
# Activate packages
library(rvest)
library(ggplot2)
library(dplyr)
library(scales)
library(maps)
library(mapproj)
library(plotly)
#---------------------------------#
# DOWNLOADING DATA FROM WIKIPEDIA #
#---------------------------------#
# The read_html() function load the web page html content in an object named le
le = read_html("https://en.wikipedia.org/w/index.php?title=List_of_U.S._states_and_territories_by_life_expectancy&oldid=928537169")
# Filter html content inobject le to keep only the life expectancy table
le = le %>% html_nodes("table") %>% .[[2]] %>% html_table(fill=T)
View(le)
#--------------------#
# DATA PREPROCESSING #
#--------------------#
# Column selection
le = le[c(1,2,6,7)]
View(le)
# Renaming columns ('le' : life expectancy)
names(le)[c(3,4)] = c("le_caucasian", "le_african")
View(le)
# Converting to numerical format (encodes missing values with NAs)
le$le_caucasian <- as.numeric(le$le_caucasian)
le$le_african <- as.numeric(le$le_african)
View(le)
# Calculating Differences Between Caucasian-American and African-American Life Expectancy
le$le_diff = le$le_caucasian - le$le_african
View(le)
# Loading USA states data
states = map_data("state")
# Creating a new variable 'region' with state names
le$region = tolower(le$State)
View(le)
# Merging our data with the USA 'states' data from 'maps' package
states = merge(states, le, by="region", all.x=T)
#---------------------------------------#
# DISPLAYING DATA ON THE MAP OF THE USA #
#---------------------------------------#
# For correctly displaying accentuated characters in maps
options(encoding="latin1")
# Life expectancy of African-Americans
ggplot(states, aes(x = long, y = lat, group = group, fill = le_african)) + geom_polygon(color = "white") + scale_fill_gradient(name = "Years", low = "#ffe8ee", high = "#c81f49", guide = "colorbar", na.value="#eeeeee") + labs(title="Esp�rance de vie du groupe ethnique Afro-Am�ricain") + coord_map()
# Life expectancy of Caucasian-American
ggplot(states, aes(x = long, y = lat, group = group, fill = le_caucasian)) + geom_polygon(color = "white") + scale_fill_gradient(name = "Years", low = "#ffe8ee", high = "#c81f49", guide = "colorbar", na.value="Gray") + labs(title="Esp�rance de vie du groupe ethnique Caucasien-Am�ricain") + coord_map()
# Dipslay differencies between life expectancies
ggplot(states, aes(x = long, y = lat, group = group, fill = le_diff)) + geom_polygon(color = "white") + scale_fill_gradient(name = "Years", low = "#ffe8ee", high = "#c81f49", guide = "colorbar", na.value="#eeeeee") + labs(title="Diff�rences dans l'esp�rance de vie des groupes ethniques \nCaucasien et Afro-Am�ricain par �tat aux USA") + coord_map()
# Display interactive USA map with contextual message for each state : caucasian-american
map_plot_caucasian = ggplot(states, aes(x = long, y = lat, group = group, fill = le_caucasian)) + geom_polygon(color = "white") + scale_fill_gradient(name = "Years", low = "#ffe8ee", high = "#c81f49", guide = "colorbar", na.value="#eeeeee") + labs(title="Esp�rance de vie du groupe ethnique Caucasien-Am�ricain") + coord_map()
ggplotly(map_plot_caucasian)
# Display interactive USA map with contextual message for each state : afro-american
map_plot_african = ggplot(states, aes(x = long, y = lat, group = group, fill = le_african)) + geom_polygon(color = "white") + scale_fill_gradient(name = "Years", low = "#ffe8ee", high = "#c81f49", guide = "colorbar", na.value="#eeeeee") + labs(title="Esp�rance de vie du groupe ethnique Afro-Am�ricain") + coord_map()
ggplotly(map_plot_african)
View(map_plot_caucasian)
# Display interactive USA map with contextual message for each state : caucasian-american
map_plot_caucasian = ggplot(states, aes(x = long, y = lat, group = group, fill = le_caucasian)) + geom_polygon(color = "white") + scale_fill_gradient(name = "Years", low = "#ffe8ee", high = "#c81f49", guide = "colorbar", na.value="#eeeeee") + labs(title="Esp�rance de vie du groupe ethnique Caucasien-Am�ricain") + coord_map()
ggplotly(map_plot_caucasian)
# Activate packages
library(rvest)
library(ggplot2)
library(dplyr)
library(scales)
library(maps)
library(mapproj)
library(plotly)
# The read_html() function load the web page html content in an object named le
le = read_html("https://en.wikipedia.org/w/index.php?title=List_of_U.S._states_and_territories_by_life_expectancy&oldid=928537169")
# Filter html content inobject le to keep only the life expectancy table
le = le %>% html_nodes("table") %>% .[[2]] %>% html_table(fill=T)
View(le)
# Column selection
le = le[c(1,2,6,7)]
View(le)
# Renaming columns ('le' : life expectancy)
names(le)[c(3,4)] = c("le_caucasian", "le_african")
View(le)
# Converting to numerical format (encodes missing values with NAs)
le$le_caucasian <- as.numeric(le$le_caucasian)
le$le_african <- as.numeric(le$le_african)
View(le)
# Calculating Differences Between Caucasian-American and African-American Life Expectancy
le$le_diff = le$le_caucasian - le$le_african
View(le)
# Loading USA states data
states = map_data("state")
# Creating a new variable 'region' with state names
le$region = tolower(le$State)
View(le)
# Merging our data with the USA 'states' data from 'maps' package
states = merge(states, le, by="region", all.x=T)
# For correctly displaying accentuated characters in maps
options(encoding="latin1")
# Life expectancy of African-Americans
ggplot(states, aes(x = long, y = lat, group = group, fill = le_african)) + geom_polygon(color = "white") + scale_fill_gradient(name = "Years", low = "#ffe8ee", high = "#c81f49", guide = "colorbar", na.value="#eeeeee") + labs(title="Esp�rance de vie du groupe ethnique Afro-Am�ricain") + coord_map()
# Life expectancy of Caucasian-American
ggplot(states, aes(x = long, y = lat, group = group, fill = le_caucasian)) + geom_polygon(color = "white") + scale_fill_gradient(name = "Years", low = "#ffe8ee", high = "#c81f49", guide = "colorbar", na.value="Gray") + labs(title="Esp�rance de vie du groupe ethnique Caucasien-Am�ricain") + coord_map()
# Dipslay differencies between life expectancies
ggplot(states, aes(x = long, y = lat, group = group, fill = le_diff)) + geom_polygon(color = "white") + scale_fill_gradient(name = "Years", low = "#ffe8ee", high = "#c81f49", guide = "colorbar", na.value="#eeeeee") + labs(title="Diff�rences dans l'esp�rance de vie des groupes ethniques \nCaucasien et Afro-Am�ricain par �tat aux USA") + coord_map()
# Display interactive USA map with contextual message for each state : caucasian-american
map_plot_caucasian = ggplot(states, aes(x = long, y = lat, group = group, fill = le_caucasian)) + geom_polygon(color = "white") + scale_fill_gradient(name = "Years", low = "#ffe8ee", high = "#c81f49", guide = "colorbar", na.value="#eeeeee") + labs(title="Esp�rance de vie du groupe ethnique Caucasien-Am�ricain") + coord_map()
ggplotly(map_plot_caucasian)
# Display interactive USA map with contextual message for each state : afro-american
map_plot_african = ggplot(states, aes(x = long, y = lat, group = group, fill = le_african)) + geom_polygon(color = "white") + scale_fill_gradient(name = "Years", low = "#ffe8ee", high = "#c81f49", guide = "colorbar", na.value="#eeeeee") + labs(title="Esp�rance de vie du groupe ethnique Afro-Am�ricain") + coord_map()
ggplotly(map_plot_african)
save.image("C:/Users/hugob/Desktop/MIAGE_TP_M2/machine_learning/.RData")
load("C:/Users/hugob/Desktop/MIAGE_TP_M2/machine_learning/.RData")
getwd()
load("C:/Users/hugob/Desktop/MIAGE_TP_M2/machine_learning/.RData")
setwd("C:/Users/hugob/Desktop/MIAGE_TP_M2/machine_learning/")
getwd()
q()
